---
import listObjectToArray from "../../utils/listObjectToArray.ts";
import retrieveImageUrl from "../../utils/retrieveImageUrl.ts";
import { Image } from "astro:assets";
import Button from "../Elements/Button.astro";

const { heading, subheading, description, image, founder, list, button } =
	Astro.props;

const listAsArray = listObjectToArray(list);

const imagesIds = [image, founder.image];
const [groupImage, founderImage] = await Promise.all(
	imagesIds.map(async (id) => await retrieveImageUrl(id)),
);
---

<section id="about-us">
	<div class="container">
		<div class="grid">
			<Image
				src={groupImage}
				alt="Group of people"
				width="700"
				height="700"
			/>
			<div class="main-text">
				<h2 class="title title--large">{heading}</h2>
				<h3 class="title title--small">{subheading}</h3>
				<p class="regular-text">
					{description}
				</p>
			</div>
			<div class="card">
				<Image
					src={founderImage}
					alt="picture of the founder"
					width="300"
					height="300"
				/>
				<h3 class="title title--small">{founder.title}</h3>
				<p class="regular-text">
					{founder.description}
				</p>
				<Button
					tag="a"
					href="https://www.linkedin.com/in/isaac-evans-gould-2053a417/"
					variant="secondary"
				>
					{founder.button}
				</Button>
			</div>
			{
				listAsArray.map((item) => {
					return (
						<div>
							<h3 class="title title--small">{item.title}</h3>
							<p class="regular-text">{item.description}</p>
						</div>
					);
				})
			}
			<div class="button">
				<Button
					tag="a"
					href="#talk-to-us"
				>
					{button}
				</Button>
			</div>
		</div>
	</div>
</section>

<style>
	.container {
		position: relative;
	}

	.grid {
		display: grid;
		grid-template-columns: 1fr 1fr;
		grid-template-rows: repeat(5, auto);
		column-gap: 8rem;
		row-gap: 4rem;
	}

	.grid > img {
		grid-column: 1 / 2;
		grid-row: 1 / span 2;

		height: 100%;
		width: 100%;
		object-fit: cover;
	}

	.grid > .main-text {
		padding-bottom: 5rem;
	}

	.grid > .card {
		grid-column: 1 / span 2;
		grid-row: 2 / span 2;
		justify-self: center;

		width: 33%;
		background-color: var(--green-400);
		padding: var(--fs-8);
	}

	.grid > .button {
		grid-column: span 2;

		justify-self: center;
	}

	h2 {
		margin-bottom: var(--fs-7);
	}

	.card > * {
		margin-bottom: var(--fs-1);
	}

	.card > img {
		height: 13rem;
		width: 100%;
		object-fit: cover;
	}

	@media (max-width: 60em) {
		.grid {
			grid-template-rows: repeat(6, auto);
			column-gap: 1.5rem;
			row-gap: 2.5rem;
		}

		.grid > img {
			grid-column: 1 / span 2;
			grid-row: 2 / span 2;
		}

		.grid > .main-text {
			grid-column: 1 / span 2;
			grid-row: 1 / 2;

			padding-bottom: 0;
		}

		.grid > .card {
			grid-row: 3 / span 2;

			width: 50%;
		}
	}

	@media (max-width: 35em) {
		.grid {
			grid-template-columns: 1fr;
			row-gap: 2rem;
		}

		.grid.grid > * {
			grid-column: span 1;
			grid-row: span 1;
		}

		.grid > .main-text {
			order: -1;
		}

		.grid > .card {
			width: 100%;
		}
	}
</style>
